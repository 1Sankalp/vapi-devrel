/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/@vapi-ai/web@2.3.8/dist/vapi.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const daily_js_1=__importDefault(require("@daily-co/daily-js")),events_1=__importDefault(require("events")),client_1=require("./client");async function startAudioPlayer(t,e){t.muted=!1,t.autoplay=!0,null!=e&&(t.srcObject=new MediaStream([e]),await t.play())}async function buildAudioPlayer(t,e){const a=document.createElement("audio");return a.dataset.participantId=e,document.body.appendChild(a),await startAudioPlayer(a,t),a}function destroyAudioPlayer(t){const e=document.querySelector(`audio[data-participant-id="${t}"]`);e?.remove()}function subscribeToTracks(t,e,a,s){t.participant.local||e.updateParticipant(t.participant.session_id,{setSubscribedTracks:{audio:!0,video:a||s}})}class VapiEventEmitter extends events_1.default{on(t,e){return super.on(t,e),this}once(t,e){return super.once(t,e),this}emit(t,...e){return super.emit(t,...e)}removeListener(t,e){return super.removeListener(t,e),this}removeAllListeners(t){return super.removeAllListeners(t),this}}class Vapi extends VapiEventEmitter{started=!1;call=null;speakingTimeout=null;dailyCallConfig={};dailyCallObject={};hasEmittedCallEndedStatus=!1;constructor(t,e,a,s){super(),client_1.client.baseUrl=e??"https://api.vapi.ai",client_1.client.setSecurityData(t),this.dailyCallConfig=a??{},this.dailyCallObject=s??{}}cleanup(){this.started=!1,this.hasEmittedCallEndedStatus=!1,this.call?.destroy(),this.call=null,this.speakingTimeout=null}isMobileDevice(){if("undefined"==typeof navigator)return!1;const t=navigator.userAgent;return/android|iphone|ipad|ipod|iemobile|blackberry|bada/i.test(t.toLowerCase())}async sleep(t){return new Promise((e=>setTimeout(e,t)))}async start(t,e,a,s,i){const r=Date.now();if(!t&&!a&&!s){const t=new Error("Assistant or Squad or Workflow must be provided.");throw this.emit("error",{type:"validation-error",stage:"input-validation",message:t.message,timestamp:(new Date).toISOString()}),t}if(this.started)return this.emit("call-start-progress",{stage:"validation",status:"failed",timestamp:(new Date).toISOString(),metadata:{reason:"already-started"}}),null;this.emit("call-start-progress",{stage:"initialization",status:"started",timestamp:(new Date).toISOString(),metadata:{hasAssistant:!!t,hasSquad:!!a,hasWorkflow:!!s}}),this.started=!0;try{this.emit("call-start-progress",{stage:"web-call-creation",status:"started",timestamp:(new Date).toISOString()});const o=Date.now(),n=(await client_1.client.call.callControllerCreateWebCall({assistant:"string"==typeof t?void 0:t,assistantId:"string"==typeof t?t:void 0,assistantOverrides:e,squad:"string"==typeof a?void 0:a,squadId:"string"==typeof a?a:void 0,workflow:"string"==typeof s?void 0:s,workflowId:"string"==typeof s?s:void 0,workflowOverrides:i})).data,l=Date.now()-o;this.emit("call-start-progress",{stage:"web-call-creation",status:"completed",duration:l,timestamp:(new Date).toISOString(),metadata:{callId:n?.id||"unknown",videoRecordingEnabled:n?.artifactPlan?.videoRecordingEnabled??!1,voiceProvider:n?.assistant?.voice?.provider||"unknown"}}),this.call&&(this.emit("call-start-progress",{stage:"daily-call-object-creation",status:"started",timestamp:(new Date).toISOString(),metadata:{action:"cleanup-existing"}}),this.cleanup());const c=n?.artifactPlan?.videoRecordingEnabled??!1,d="tavus"===n?.assistant?.voice?.provider;this.emit("call-start-progress",{stage:"daily-call-object-creation",status:"started",timestamp:(new Date).toISOString(),metadata:{audioSource:this.dailyCallObject.audioSource??!0,videoSource:this.dailyCallObject.videoSource??c,isVideoRecordingEnabled:c,isVideoEnabled:d}});const p=Date.now();try{this.call=daily_js_1.default.createCallObject({audioSource:this.dailyCallObject.audioSource??!0,videoSource:this.dailyCallObject.videoSource??c,dailyConfig:this.dailyCallConfig});const t=Date.now()-p;this.emit("call-start-progress",{stage:"daily-call-object-creation",status:"completed",duration:t,timestamp:(new Date).toISOString()})}catch(t){const e=Date.now()-p;throw this.emit("call-start-progress",{stage:"daily-call-object-creation",status:"failed",duration:e,timestamp:(new Date).toISOString(),metadata:{error:t?.toString()}}),this.emit("error",{type:"daily-call-object-creation-error",stage:"daily-call-object-creation",error:t,timestamp:(new Date).toISOString()}),t}this.call.iframe()?.style.setProperty("display","none"),this.call.on("left-meeting",(()=>{this.emit("call-end"),this.hasEmittedCallEndedStatus||(this.emit("message",{type:"status-update",status:"ended",endedReason:"customer-ended-call"}),this.hasEmittedCallEndedStatus=!0),c&&this.call?.stopRecording(),this.cleanup()})),this.call.on("error",(t=>{this.emit("error",t),c&&this.call?.stopRecording()})),this.call.on("camera-error",(t=>{this.emit("camera-error",t)})),this.call.on("network-quality-change",(t=>{this.emit("network-quality-change",t)})),this.call.on("network-connection",(t=>{this.emit("network-connection",t)})),this.call.on("track-started",(async t=>{t&&t.participant&&(t.participant?.local||"Vapi Speaker"===t.participant?.user_name&&("video"===t.track.kind&&this.emit("video",t.track),"audio"===t.track.kind&&await buildAudioPlayer(t.track,t.participant.session_id),this.call?.sendAppMessage("playable")))})),this.call.on("participant-joined",(t=>{t&&this.call&&subscribeToTracks(t,this.call,c,d)})),this.call.on("participant-updated",(t=>{t&&this.emit("daily-participant-updated",t.participant)})),this.call.on("participant-left",(t=>{t&&destroyAudioPlayer(t.participant.session_id)}));const u=this.isMobileDevice();if(this.emit("call-start-progress",{stage:"mobile-permissions",status:"started",timestamp:(new Date).toISOString(),metadata:{isMobile:u}}),u){const t=Date.now();await this.sleep(1e3);const e=Date.now()-t;this.emit("call-start-progress",{stage:"mobile-permissions",status:"completed",duration:e,timestamp:(new Date).toISOString(),metadata:{action:"permissions-wait"}})}else this.emit("call-start-progress",{stage:"mobile-permissions",status:"completed",timestamp:(new Date).toISOString(),metadata:{action:"skipped-not-mobile"}});this.emit("call-start-progress",{stage:"daily-call-join",status:"started",timestamp:(new Date).toISOString()});const m=Date.now();try{await this.call.join({url:n.webCallUrl,subscribeToTracksAutomatically:!1});const t=Date.now()-m;this.emit("call-start-progress",{stage:"daily-call-join",status:"completed",duration:t,timestamp:(new Date).toISOString()})}catch(t){const e=Date.now()-m;throw this.emit("call-start-progress",{stage:"daily-call-join",status:"failed",duration:e,timestamp:(new Date).toISOString(),metadata:{error:t?.toString()}}),this.emit("error",{type:"daily-call-join-error",stage:"daily-call-join",error:t,duration:e,timestamp:(new Date).toISOString()}),t}if(c){this.emit("call-start-progress",{stage:"video-recording-setup",status:"started",timestamp:(new Date).toISOString()});const t=(new Date).getTime(),e=Date.now();try{this.call.startRecording({width:1280,height:720,backgroundColor:"#FF1F2D3D",layout:{preset:"default"}});const a=Date.now()-e;this.emit("call-start-progress",{stage:"video-recording-setup",status:"completed",duration:a,timestamp:(new Date).toISOString()}),this.call.on("recording-started",(()=>{const e=((new Date).getTime()-t)/1e3;this.emit("call-start-progress",{stage:"video-recording-started",status:"completed",timestamp:(new Date).toISOString(),metadata:{delaySeconds:e}}),this.send({type:"control",control:"say-first-message",videoRecordingStartDelaySeconds:e})}))}catch(t){const a=Date.now()-e;this.emit("call-start-progress",{stage:"video-recording-setup",status:"failed",duration:a,timestamp:(new Date).toISOString(),metadata:{error:t?.toString()}}),this.emit("error",{type:"video-recording-setup-error",stage:"video-recording-setup",error:t,timestamp:(new Date).toISOString()})}}else this.emit("call-start-progress",{stage:"video-recording-setup",status:"completed",timestamp:(new Date).toISOString(),metadata:{action:"skipped-not-enabled"}});this.emit("call-start-progress",{stage:"audio-observer-setup",status:"started",timestamp:(new Date).toISOString()});const h=Date.now();try{this.call.startRemoteParticipantsAudioLevelObserver(100);const t=Date.now()-h;this.emit("call-start-progress",{stage:"audio-observer-setup",status:"completed",duration:t,timestamp:(new Date).toISOString()})}catch(t){const e=Date.now()-h;this.emit("call-start-progress",{stage:"audio-observer-setup",status:"failed",duration:e,timestamp:(new Date).toISOString(),metadata:{error:t?.toString()}}),this.emit("error",{type:"audio-observer-setup-error",stage:"audio-observer-setup",error:t,timestamp:(new Date).toISOString()})}this.call.on("remote-participants-audio-level",(t=>{t&&this.handleRemoteParticipantsAudioLevel(t)})),this.call.on("app-message",(t=>this.onAppMessage(t))),this.call.on("nonfatal-error",(t=>{"audio-processor-error"===t?.type&&this.call?.updateInputSettings({audio:{processor:{type:"none"}}}).then((()=>{this.call?.setLocalAudio(!0)}))})),this.emit("call-start-progress",{stage:"audio-processing-setup",status:"started",timestamp:(new Date).toISOString()});const g=Date.now();try{this.call.updateInputSettings({audio:{processor:{type:"noise-cancellation"}}});const t=Date.now()-g;this.emit("call-start-progress",{stage:"audio-processing-setup",status:"completed",duration:t,timestamp:(new Date).toISOString()})}catch(t){const e=Date.now()-g;this.emit("call-start-progress",{stage:"audio-processing-setup",status:"failed",duration:e,timestamp:(new Date).toISOString(),metadata:{error:t?.toString()}}),this.emit("error",{type:"audio-processing-setup-error",stage:"audio-processing-setup",error:t,timestamp:(new Date).toISOString()})}const S=Date.now()-r;return this.emit("call-start-success",{totalDuration:S,callId:n?.id||"unknown",timestamp:(new Date).toISOString()}),n}catch(e){const i=Date.now()-r;return this.emit("call-start-failed",{stage:"unknown",totalDuration:i,error:e?.toString()||"Unknown error occurred",errorStack:e instanceof Error?e.stack:"No stack trace available",timestamp:(new Date).toISOString(),context:{hasAssistant:!!t,hasSquad:!!a,hasWorkflow:!!s,isMobile:this.isMobileDevice()}}),this.emit("error",{type:"start-method-error",stage:"unknown",error:e,totalDuration:i,timestamp:(new Date).toISOString(),context:{hasAssistant:!!t,hasSquad:!!a,hasWorkflow:!!s,isMobile:this.isMobileDevice()}}),this.cleanup(),null}}onAppMessage(t){if(t)try{if("listening"===t.data)return this.emit("call-start");try{const e=JSON.parse(t.data);this.emit("message",e),e&&"type"in e&&"status"in e&&"status-update"===e.type&&"ended"===e.status&&(this.hasEmittedCallEndedStatus=!0)}catch(t){console.log("Error parsing message data: ",t)}}catch(t){console.error(t)}}handleRemoteParticipantsAudioLevel(t){const e=Object.values(t.participantsAudioLevel).reduce(((t,e)=>t+e),0);this.emit("volume-level",Math.min(1,e/.15));e>.01&&(this.speakingTimeout?(clearTimeout(this.speakingTimeout),this.speakingTimeout=null):this.emit("speech-start"),this.speakingTimeout=setTimeout((()=>{this.emit("speech-end"),this.speakingTimeout=null}),1e3))}stop(){this.started=!1,this.call?.destroy(),this.call=null}send(t){this.call?.sendAppMessage(JSON.stringify(t))}setMuted(t){if(!this.call)throw new Error("Call object is not available.");this.call.setLocalAudio(!t)}isMuted(){return!!this.call&&!1===this.call.localAudio()}say(t,e,a,s){this.send({type:"say",message:t,endCallAfterSpoken:e,interruptionsEnabled:a??!1,interruptAssistantEnabled:s??!1})}setInputDevicesAsync(t){this.call?.setInputDevicesAsync(t)}async increaseMicLevel(t){if(!this.call)throw new Error("Call object is not available.");try{const e=await navigator.mediaDevices.getUserMedia({audio:!0}),a=new AudioContext,s=a.createMediaStreamSource(e),i=a.createGain();i.gain.value=t,s.connect(i);const r=a.createMediaStreamDestination();i.connect(r);const[o]=r.stream.getAudioTracks();await this.call.setInputDevicesAsync({audioSource:o})}catch(t){console.error("Error adjusting microphone level:",t)}}setOutputDeviceAsync(t){this.call?.setOutputDeviceAsync(t)}getDailyCallObject(){return this.call}startScreenSharing(t,e){this.call?.startScreenShare({displayMediaOptions:t,screenVideoSendSettings:e})}stopScreenSharing(){this.call?.stopScreenShare()}}exports.default=Vapi;
//# sourceMappingURL=/sm/dca221ec3bfef71e91ea8113e97a20346d017bbc4e22eff6b3a42a422902bdb8.map